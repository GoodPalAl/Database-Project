--
-- PostgreSQL database dump
--

-- Dumped from database version 10.12 (Ubuntu 10.12-0ubuntu0.18.04.1)
-- Dumped by pg_dump version 10.12 (Ubuntu 10.12-0ubuntu0.18.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: age_to_birth_year(numeric); Type: FUNCTION; Schema: public; Owner: emma
--

CREATE FUNCTION public.age_to_birth_year(age numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
  RETURN date_part('year', CURRENT_DATE) - age;
END;
$$;


ALTER FUNCTION public.age_to_birth_year(age numeric) OWNER TO emma;

--
-- Name: age_to_birth_year(integer, numeric); Type: FUNCTION; Schema: public; Owner: emma
--

CREATE FUNCTION public.age_to_birth_year(pet_id integer, age numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
  RETURN date_part('year', CURRENT_DATE) - age;
END;
$$;


ALTER FUNCTION public.age_to_birth_year(pet_id integer, age numeric) OWNER TO emma;

--
-- Name: birth_year_to_age(numeric); Type: FUNCTION; Schema: public; Owner: emma
--

CREATE FUNCTION public.birth_year_to_age(birth_year numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
  RETURN date_part('year', CURRENT_DATE) - birth_year;
END;
$$;


ALTER FUNCTION public.birth_year_to_age(birth_year numeric) OWNER TO emma;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: accounts; Type: TABLE; Schema: public; Owner: emma
--

CREATE TABLE public.accounts (
    username character varying(20) NOT NULL,
    fullname character varying(30) NOT NULL,
    password character varying(50) NOT NULL,
    email character varying(30) NOT NULL,
    tsjoined timestamp without time zone NOT NULL,
    rating numeric(2,1),
    offersdone integer,
    issitter boolean NOT NULL,
    isowner boolean NOT NULL,
    city character varying(50) NOT NULL,
    state character(2) NOT NULL,
    CONSTRAINT accounts_offersdone_check CHECK ((offersdone >= 0)),
    CONSTRAINT accounts_rating_check CHECK (((rating >= (1)::numeric) AND (rating <= (5)::numeric))),
    CONSTRAINT accounts_state_check CHECK ((((lower("left"((state)::text, 1)) >= 'a'::text) AND (lower("left"((state)::text, 1)) <= 'z'::text)) AND (("substring"((state)::text, 2, 1) >= 'a'::text) AND ("substring"((state)::text, 2, 1) <= 'z'::text))))
);


ALTER TABLE public.accounts OWNER TO emma;

--
-- Name: pets; Type: TABLE; Schema: public; Owner: emma
--

CREATE TABLE public.pets (
    petid integer NOT NULL,
    pettype character varying(50) NOT NULL,
    petname character varying(50) NOT NULL,
    birthyear numeric(4,0),
    owner character varying(20) NOT NULL,
    CONSTRAINT pets_birthyear_check CHECK ((birthyear > (1900)::numeric))
);


ALTER TABLE public.pets OWNER TO emma;

--
-- Name: pets_petid_seq; Type: SEQUENCE; Schema: public; Owner: emma
--

ALTER TABLE public.pets ALTER COLUMN petid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.pets_petid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: accounts; Type: TABLE DATA; Schema: public; Owner: emma
--

COPY public.accounts (username, fullname, password, email, tsjoined, rating, offersdone, issitter, isowner, city, state) FROM stdin;
EmmaABPc	Emma Griffin	$1$Qms.28xo$uk6j2NAmU4MSk7yCEIZtV.	emma@emma.com	2004-10-19 10:23:54	2.6	0	t	t	Tampa	FL
e	e a	a	e@a.c	2020-04-14 17:39:28.993017	\N	0	t	t	Tampa	FL
eabp	e	eep	e@yeehaw.com	2020-04-14 17:45:34.368358	\N	0	f	f	Austin	TX
user	First Last	p@SSw0rd!	email@website.com	2020-04-14 22:01:13.371983	\N	0	t	t	Lakeland	FL
user4	New User	mdh0Xz4q00HhI	new_email@website.com	2020-04-14 22:22:28.623919	\N	0	t	f	Pensacola	FL
ahhh	Full Name	mdZzuV05S/M3A	badmail@goodsite.domain	2020-04-15 19:45:31.620886	\N	0	f	f	Oklahoma City	OK
charli_xcx	Charli XCX	mdgWWdQ06PyJw	charli@xcx.com	2020-04-15 20:15:06.156795	\N	0	t	t	Los Angeles	CA
another_one_	why	mdZzuV05S/M3A	bad@good.domain	2020-04-15 11:29:21.500284	\N	0	f	t	Portland	ME
new_user1	Jane Castor	mdZzuV05S/M3A	jane@city.of.tampa.com	2020-04-16 11:51:49.852454	\N	0	f	t	Tampa	FL
jane_castor_mayor	Jane Castor	mdZzuV05S/M3A	jane@city.of.tampa.gov	2020-04-16 11:58:14.711647	\N	0	f	t	Tampa	FL
New_User	New User	mdZzuV05S/M3A	new@user.com	2020-04-16 16:05:29.236425	\N	0	f	t	New Orleans	LA
\.


--
-- Data for Name: pets; Type: TABLE DATA; Schema: public; Owner: emma
--

COPY public.pets (petid, pettype, petname, birthyear, owner) FROM stdin;
\.


--
-- Name: pets_petid_seq; Type: SEQUENCE SET; Schema: public; Owner: emma
--

SELECT pg_catalog.setval('public.pets_petid_seq', 1, false);


--
-- Name: accounts accounts_email_key; Type: CONSTRAINT; Schema: public; Owner: emma
--

ALTER TABLE ONLY public.accounts
    ADD CONSTRAINT accounts_email_key UNIQUE (email);


--
-- Name: accounts accounts_pkey; Type: CONSTRAINT; Schema: public; Owner: emma
--

ALTER TABLE ONLY public.accounts
    ADD CONSTRAINT accounts_pkey PRIMARY KEY (username);


--
-- Name: pets pets_pkey; Type: CONSTRAINT; Schema: public; Owner: emma
--

ALTER TABLE ONLY public.pets
    ADD CONSTRAINT pets_pkey PRIMARY KEY (petid);


--
-- Name: pets pets_owner_fkey; Type: FK CONSTRAINT; Schema: public; Owner: emma
--

ALTER TABLE ONLY public.pets
    ADD CONSTRAINT pets_owner_fkey FOREIGN KEY (owner) REFERENCES public.accounts(username);


--
-- PostgreSQL database dump complete
--

